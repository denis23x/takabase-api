generator client {
  provider        = "prisma-client-js"
  output          = "client"
  binaryTargets   = ["native", "linux-arm64-openssl-3.0.x"]
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "mysql"
  url          = env("MYSQL_DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id          Int        @id @default(autoincrement()) @db.Int
  googleId    String?    @db.VarChar(255)
  firebaseId  String     @unique @db.VarChar(255)
  facebookId  String?    @db.VarChar(255)
  name        String     @unique @db.VarChar(255)
  description String?    @db.VarChar(255)
  avatar      String?    @db.VarChar(255)
  createdAt   DateTime   @default(now()) @db.DateTime(6)
  updatedAt   DateTime   @default(now()) @db.DateTime(6)
  deletedAt   DateTime?  @db.DateTime(6)
  githubId    String?    @db.VarChar(255)
  terms       Boolean    @default(true) @db.TinyInt
  categories  Category[]
  posts       Post[]

  @@fulltext([name])
}

model Category {
  id          Int       @id @default(autoincrement()) @db.Int
  userId      Int       @db.Int
  name        String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  createdAt   DateTime  @default(now()) @db.DateTime(6)
  updatedAt   DateTime  @default(now()) @db.DateTime(6)
  deletedAt   DateTime? @db.DateTime(6)
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  posts       Post[]

  @@unique([name, userId])
  @@index([userId])
  @@fulltext([name, description])
}

model Post {
  id          Int       @id @default(autoincrement()) @db.Int
  name        String    @db.VarChar(255)
  description String    @db.VarChar(255)
  markdown    String    @db.Text
  image       String?   @db.VarChar(255)
  userId      Int       @db.Int
  categoryId  Int       @db.Int
  createdAt   DateTime  @default(now()) @db.DateTime(6)
  updatedAt   DateTime  @default(now()) @db.DateTime(6)
  deletedAt   DateTime? @db.DateTime(6)
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  user        User      @relation(fields: [userId], references: [id])

  @@unique([name, categoryId])
  @@index([categoryId])
  @@index([userId])
  @@fulltext([name, description])
}
